<<<<<<< HEAD
x - 5
x = 5
blah = list(x=5, a ="c")
data(iris)
plot(iris)
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?plot
require(stats) # for lowess, rpois, rnorm
plot(cars)
lines(lowess(cars))
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
getwd()
setwd("~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/")
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
from
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/networks.calculate.mds.edges.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
setwd("~/Desktop/OncoGit/TCGAarchive/scripts/")
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
source('~/Desktop/OncoGit/TCGAarchive/scripts/common.R')
source('~/Desktop/OncoGit/TCGAarchive/scripts/common.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
oCollection
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
oCollection
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
collection.exists(oCollection$collection)
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
install.packages("knitr")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
=======
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/networks.calculate.mds.edges.R')
Sys.getenv(oncoscape.username)
Sys.getenv("oncoscape.username")
Sys.getenv("PATH")
Sys.getenv()
Sys.getenv("oncoscape_username")
Sys.getenv("oncoscape_username")
Sys.getenv("$oncoscape_username")
Sys.getenv($oncoscape_username)
Sys.getenv("PATH")
Sys.getenv("oncoscape_username")
sys.call("echo $PATH")
system("echo $PATH")
system("echo $oncoscape_username")
Sys.getenv("oncoscape_username")
username = Sys.getenv("oncoscape_username")
pw = Sys.getenv("oncoscape_pw")
username
Sys.getenv("oncoscape_username")
R_ENVIRON
Sys.getenv("R_ENVIRON")
Sys.getenv("oncoscape_username")
Sys.getenv("oncoscape_user")
Sys.setenv("oncoscape_username="oncoscape")
Sys.setenv(oncoscape_username="oncoscape")
Sys.getenv("oncoscape_username")
Sys.getenv("oncoscape_username")
R.home()
Sys.getenv("oncoscape_username")
Sys.getenv("oncoscape_username")
Sys.getenv("oncoscape_pw")
username = Sys.getenv("oncoscape_username")
pw = Sys.getenv("oncoscape_pw")
pw
install.packages("RMongo")
require("RMongo")
host = paste("mongodb://",username,":",pwd,"@oncoscape-dev-db1.sttrcancer.io:27017,oncoscape-dev-db2.sttrcancer.io:27017,oncoscape-dev-db3.sttrcancer.io:27017", sep="")
host = paste("mongodb://",username,":",pw,"@oncoscape-dev-db1.sttrcancer.io:27017,oncoscape-dev-db2.sttrcancer.io:27017,oncoscape-dev-db3.sttrcancer.io:27017", sep="")
host
require(RMongo)
port=27017
db="oncoscape"
mongo <- mongoDbConnect(db, host=host, port=port)
host="oncoscape-dev-db1.sttrcancer.io"
host
mongo <- mongoDbConnect(db, host=host, port=port)
authenticated <- dbAuthenticate(mongo, username, pw)
db
username
dbShowCollections(mongo)
mongo <- mongoDbConnect("admin", host=host, port=port)
dbShowCollections(mongo)
dbAuthenticate(mongo, username, pw)
pw
username
mongo
dbShowCollections(mongo)
mongo <- mongoDbConnect("admin", host=host, port=port)
dbShowCollections(mongo)
sessionInfo()
install.packages("pdflatex")
require(RMongo)
sessionInfo()
host
db
mongo <- mongoDbConnect(db, host=host, port=port)
dbShowCollections(mongo)
require(RMongo)
authenticated <- dbAuthenticate(mongo, username, pw)
host="oncoscape-dev-db1.sttrcancer.io:27017"
host
mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
require(RMongo)
mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
detach("package:RMongo", unload=TRUE)
require(RMongo)
username = Sys.getenv("oncoscape_username")
pw = Sys.getenv("oncoscape_pw")
host="oncoscape-dev-db1.sttrcancer.io:27017"
db="oncoscape"
mongo <- mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
host="oncoscape-dev-db1.sttrcancer.io:27017,oncoscape-dev-db2.sttrcancer.io:27017,oncoscape-dev-db3.sttrcancer.io:27017"
mongo <- mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
db
db = "admin"
mongo <- mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
mongo <- mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
require(RMongo)
host="oncoscape-dev-db1.sttrcancer.io:27017"
db="admin"
username = Sys.getenv("oncoscape_username")
pw = Sys.getenv("oncoscape_pw")
mongo <- mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
library(mongolite)
username = Sys.getenv("oncoscape_username")
pw = Sys.getenv("oncoscape_pw")
db <- "oncoscape"
host = paste("mongodb://",username,":",pw,"@oncoscape-dev-db1.sttrcancer.io:27017,oncoscape-dev-db2.sttrcancer.io:27017,oncoscape-dev-db3.sttrcancer.io:27017", sep="")
collection <- "lookup_oncoscape_datasources"
mongo <- mongo(collection=collection, db=db, url=host)
require(RMongo)
host="oncoscape-dev-db1.sttrcancer.io:27017"
mongo <- mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
mongo <- mongoDbReplicaSetConnectWithCredentials(db, hosts=host, username, pw)
setwd("~/Desktop/OncoGit/TCGAarchive/scripts/")
debugSource('~/Desktop/OncoGit/TCGAarchive/scripts/tcga.import.R')
what
class(result)
dim(result)
rownames(result)[1:5]
idName = rownames(result)[1]
status = con$insert(
toJSON( result[idName,]
, auto_unbox=T));
result[idName,]
toJSON(result[idName,])
toJSON(as.list(result[idName,]))
toJSON(as.list(result[idName,]), auto_unbox = T)
status = con$insert(
toJSON( as.list(result[idName,])
, auto_unbox=T));
status$nInserted
>>>>>>> 7d370ca32c350ca7d63ab257528e7bd2e6ca6f1b
