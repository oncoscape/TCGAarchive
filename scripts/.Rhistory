x - 5
x = 5
blah = list(x=5, a ="c")
data(iris)
plot(iris)
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?plot
require(stats) # for lowess, rpois, rnorm
plot(cars)
lines(lowess(cars))
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
getwd()
setwd("~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/")
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
from
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/rapidAutopsy.import.R')
source('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/networks.calculate.mds.edges.R')
setwd("~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/")
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
event <- origList[[1]]
event
data <- event$Fields
data
toJSON(data)
df <- as.data.frame(origList)
dim(df)
df[,1:5]
df[,1:15]
df <- sapply(origlist, [)
df <- sapply(origlist, as.data.frame)
df <- sapply(origList, as.data.frame)
dim(df)
length(df)
df <- as.data.frame(df)
dim(df)
test <- split(origList, PatientID)
test <- split(origList, "PatientID")
length(test)
dim(test)
test[1]
test <- as.data.frame(origList, optional=T)
patientID <- gsub("\\.", "-", event$PatientID);
if(!grepl("\\-\\d\\d$",patientID)){
patientID <- paste(patientID, "01", sep="-")
}
name <- event$Name
if(name %in% c("Birth")){
start <- end <- event$date
} else if(name %in% c("Drug", "Radiation")){
start <- event$date[1]
end   <- event$date[2]
}
data <- event$Fields
list(name=name, start=start, end=end, data=data)
patientID
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
dim(eventList)
eventList[1,1:5]
eventList <- sapply(origList, function(event){
patientID <- gsub("\\.", "-", event$PatientID);
if(!grepl("\\-\\d\\d$",patientID)){
patientID <- paste(patientID, "01", sep="-")
}
name <- event$Name
if(name %in% c("Birth")){
start <- end <- event$date
} else if(name %in% c("Drug", "Radiation")){
start <- event$date[1]
end   <- event$date[2]
}
data <- event$Fields
c(name=name, start=start, end=end, data=data)
})
length(eventList)
eventList[[1]]
origList[[1]]
unique(lapply(origList, function(event) event$Name))
eventList <- sapply(origList, function(event){
patientID <- gsub("\\.", "-", event$PatientID);
if(!grepl("\\-\\d\\d$",patientID)){
patientID <- paste(patientID, "01", sep="-")
}
name <- event$Name
if(name %in% c("Birth", "Diagnosis", "Status", "Progression", "Procedure", "Encounter", "Pathology", "Absent")){
start <- end <- event$Fields$date
} else if(name %in% c("Drug", "Radiation")){
start <- event$Fields$date[1]
end   <- event$Fields$date[2]
}
data <- event$Fields
data$date <- NULL
list(name=name, start=start, end=end, data=data)
})
dim(eventList)
eventList[,1:20]
eventList <- t(sapply(origList, function(event){
patientID <- gsub("\\.", "-", event$PatientID);
if(!grepl("\\-\\d\\d$",patientID)){
patientID <- paste(patientID, "01", sep="-")
}
name <- event$Name
if(name %in% c("Birth", "Diagnosis", "Status", "Progression", "Procedure", "Encounter", "Pathology", "Absent")){
start <- end <- event$Fields$date
} else if(name %in% c("Drug", "Radiation")){
start <- event$Fields$date[1]
end   <- event$Fields$date[2]
}
data <- event$Fields
data$date <- NULL
list(name=name, start=start, end=end, data=data)
}))
eventList[1:5,]
eventList <- t(sapply(origList, function(event){
patientID <- gsub("\\.", "-", event$PatientID);
if(!grepl("\\-\\d\\d$",patientID)){
patientID <- paste(patientID, "01", sep="-")
}
name <- event$Name
if(name %in% c("Birth", "Diagnosis", "Status", "Progression", "Procedure", "Encounter", "Pathology", "Absent")){
start <- end <- event$Fields$date
} else if(name %in% c("Drug", "Radiation")){
start <- event$Fields$date[1]
end   <- event$Fields$date[2]
}
data <- event$Fields
data$date <- NULL
list(patientID=patientID, name=name, start=start, end=end, data=data)
}))
Q
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
event.tbl[1:5,]
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
length(eventList)
length(eventList[[1]])
eventList[[1]][1]
eventList[[1]]
n <- 10; nn <- 100
g <- factor(round(n * runif(n * nn)))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
xg <- split(x, g)
n <- 10; nn <- 100
g <- factor(round(n * runif(n * nn)))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
xg <- split(x, g)
dim(x)
length(x)
dim(dx)
dim(xg)
length(xg)
g <- airquality$Month
g
l <- split(airquality, g)
length(l)
l
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
event.tbl[1:5,]
g <- event.tbl[,"patientID"]
g
g <- as.factor(event.tbl[,"patientID"])
g <- unlist(event.tbl[,"patientID"])
g
eventList <- split(event.tbl, unlist(event.tbl[,"patientID"]))
eventList[[1]]
event.tbl[1:5,]
class(event.tbl)
event.tbl <- as.data.frame(event.tbl)
eventList <- split(event.tbl, unlist(event.tbl[,"patientID"]))
event.tbl[1:5,]
eventList[[1]]
class(eventList[[1]])
toJSON(eventList[[1]], pretty=T)
which(lapply(origList, function(event) origList$Name == "Test"))
which(sapply(origList, function(event) origList$Name == "Test"))
test <- lapply(origList, function(event) origList$Name == "Test")
test[[1]]
test <- lapply(origList, function(event) event$Name == "Test")
test[[1]]
which(sapply(origList, function(event) event$Name == "Test"))
which(sapply(origList, function(event) event$Name == "Tests"))
origList[[10651]]
unique(sapply(origList, function(event) event$Name ))
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
length(eventList)
class(eventLIst)
class(eventList)
class(eventList[[1]])
toJSON(eventList[[1]])
toJSON(eventList[[1]], pretty=TRUE)
names(eventList) <- sapply(eventList, function(ptEvents) ptEvents[[1]]$patientID)
names(eventList)
ptEvents <- eventList[[1]]
ptEvents
names(eventList) <- sapply(eventList, function(ptEvents) ptEvents[1,"patientID"])
names(eventList)
eventList[[1]]
t <- <- lapply(eventList, function(ptEvents){ list(name = ptEvents$name, start=ptEvents$start, end=ptEvents$end, data=ptEvents$data)})
t <- lapply(eventList, function(ptEvents){ list(name = ptEvents$name, start=ptEvents$start, end=ptEvents$end, data=ptEvents$data)})
t[[1]]
t <- <- lapply(eventList, function(ptEvents){ ptEvents$patientID = NULL; ptEvents})
t <- lapply(eventList, function(ptEvents){ ptEvents$patientID = NULL; ptEvents})
t[[1]]
IDs <- sapply(eventList, function(ptEvents) ptEvents[1,"patientID"])
eventList <- lapply(eventList, function(ptEvents){ ptEvents$patientID = NULL; ptEvents})
debugSource('~/Desktop/OncoGit/Oncoscape/dataPackages/scripts/tcga.import.R')
