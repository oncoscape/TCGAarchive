/* 
    This is the code to generate ajv_v2.json, the stage II datasource schema validation
    requires: ajv.json generated by mongooseTest.js
    Purposes
            - re-organize the error messages 
            - calculate the passed percentage at collection level
*/

var jsonfile = require("jsonfile-promised");
var ajvMsg, ajvMsg_v2;

Array.prototype.contains = function(v) {
    for(var i = 0; i < this.length; i++) {
        if(this[i] === v) return true;
    }
    return false;
};

Array.prototype.unique = function() {
        var arr = [];
        for(var i = 0; i < this.length; i++) {
            if(arr.indexOf(this[i]) === -1) {
                arr.push(this[i]);
            }
        }
        return arr; 
    };



Object.prototype.nestedUniqueCount = function(){
    var errorCount = {};
    var ar = [];
    var str;
    this['errors'].forEach(function(a){
        a.errorType.forEach(function(e){
          str = e.schemaPath + " [message: "+ e.message + "]; Number of Violation: ";  
          if(ar.contains(str)){
            errorCount[str]++;
          }else{
            ar.push(str);
            errorCount[str]=1;
          }
        });
    });
    //return ar.unique();
    return errorCount;
};

jsonfile.readFile("ajv_tcga_10262016.json").then(function(obj){
    ajvMsg = obj;
}).then(function(){
    ajvMsg_v2 = ajvMsg.map(function(a){
        var elem = {};
        if(a!=null){
            elem.collection = a.collection;
            elem.type = a.type;
            elem.disease = a.disease;
            elem.passedCounts = a.passedCounts;
            elem.totalCounts = a.totalCounts;
            elem.passedRate = a.passedCounts/a.totalCounts;
            elem.errorMessage = a.nestedUniqueCount();
        }
        
        //elem.errorMessage = a.errors.tableV2(a.nestedUnique());
        return elem;
    });
}).then(function(){
    jsonfile.writeFile('ajv_tcga_v2_10262016.json', ajvMsg_v2, {spaces:4});
});

